generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String @unique
    password String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
model Category {
    id Int @id @default(autoincrement())
    name String @unique
    products Product[]

     createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name  String
    image String

    ingredients Ingredient[]

    items ProductItem[]

    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

}

model ProductItem {
    id Int @default(autoincrement())
    
    price Int
    size Int?
    pizzaType Int?

    product Product @relation(fields: [productId], references: [id])
    productId Int
}

model Ingredient {
    id Int @default(autoincrement())

    name String
    price Int
    imageUrl String

    products Product[] @relation

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model Cart {
    id Int @default(autoincrement())
   
    user User @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int @default(0)

    cartItem CartItems[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CartItem {
    id Int @default(autoincrement())

    productItem ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int?

    cart Cart @relation(fields: [cartId], references: [id])
    cartId Int?

    quantity Int 

    ingredients Ingredient[]
}